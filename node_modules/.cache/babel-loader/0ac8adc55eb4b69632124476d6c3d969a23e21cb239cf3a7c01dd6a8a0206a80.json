{"ast":null,"code":"var _jsxFileName = \"/Users/sheme/Desktop/literature-review-tool/src/components/review/ReviewInterface.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CitationCard from './CitationCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReviewInterface = ({\n  citations,\n  keywords,\n  onTrainingComplete,\n  onDownloadResults\n}) => {\n  _s();\n  const [selectedRelevant, setSelectedRelevant] = useState([]);\n  const [selectedIrrelevant, setSelectedIrrelevant] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isTraining, setIsTraining] = useState(false);\n  const [iteration, setIteration] = useState(1);\n  const [sortedCitations, setSortedCitations] = useState([]);\n  const [trainingHistory, setTrainingHistory] = useState([]);\n  const citationsPerPage = 5;\n  const maxIterations = 10;\n  useEffect(() => {\n    // Initialize with unsorted citations\n    setSortedCitations([...citations].map((citation, index) => ({\n      ...citation,\n      id: citation.id || index,\n      score: 0.5 // Initial neutral score\n    })));\n  }, [citations]);\n\n  // Calculate if we have enough selected citations\n  const isEnoughSelected = selectedRelevant.length >= 5 && selectedIrrelevant.length >= 5;\n\n  // Get current page citations\n  const indexOfLastCitation = currentPage * citationsPerPage;\n  const indexOfFirstCitation = indexOfLastCitation - citationsPerPage;\n  const currentCitations = sortedCitations.slice(indexOfFirstCitation, indexOfLastCitation);\n  const handleCitationSelect = (citation, isRelevant) => {\n    if (isRelevant) {\n      if (selectedRelevant.some(c => c.id === citation.id)) {\n        setSelectedRelevant(selectedRelevant.filter(c => c.id !== citation.id));\n      } else if (selectedRelevant.length < 5) {\n        setSelectedRelevant([...selectedRelevant, citation]);\n      }\n    } else {\n      if (selectedIrrelevant.some(c => c.id === citation.id)) {\n        setSelectedIrrelevant(selectedIrrelevant.filter(c => c.id !== citation.id));\n      } else if (selectedIrrelevant.length < 5) {\n        setSelectedIrrelevant([...selectedIrrelevant, citation]);\n      }\n    }\n  };\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleTraining = () => {\n    if (!isEnoughSelected) return;\n    setIsTraining(true);\n\n    // Add current selections to training history\n    const newTrainingHistory = [...trainingHistory, {\n      iteration,\n      relevant: selectedRelevant,\n      irrelevant: selectedIrrelevant\n    }];\n    setTrainingHistory(newTrainingHistory);\n\n    // Simulate ML model training and re-scoring\n    setTimeout(() => {\n      // In a real app, this would call your backend ML service\n      // For now, we'll simulate re-scoring based on selections\n      const newSortedCitations = simulateModelTraining(sortedCitations, selectedRelevant, selectedIrrelevant);\n      setSortedCitations(newSortedCitations);\n      if (iteration < maxIterations) {\n        setIteration(prev => prev + 1);\n        // Reset selections for next iteration\n        setSelectedRelevant([]);\n        setSelectedIrrelevant([]);\n        setCurrentPage(1);\n      }\n      setIsTraining(false);\n    }, 2000);\n  };\n\n  // Simulate ML model training and re-scoring of citations\n  const simulateModelTraining = (allCitations, relevant, irrelevant) => {\n    // In a real implementation, this would be replaced with actual ML model predictions\n    return allCitations.map(citation => {\n      // Check if this citation was selected as relevant\n      if (relevant.some(c => c.id === citation.id)) {\n        return {\n          ...citation,\n          score: 1.0\n        }; // Highest relevance\n      }\n\n      // Check if this citation was selected as irrelevant\n      if (irrelevant.some(c => c.id === citation.id)) {\n        return {\n          ...citation,\n          score: 0.0\n        }; // Lowest relevance\n      }\n\n      // For other citations, adjust scores based on similarity to selected ones\n      // This is just a simple simulation\n      const currentScore = citation.score || 0.5;\n      const randomAdjustment = Math.random() * 0.2 - 0.1; // Random adjustment between -0.1 and 0.1\n      const newScore = Math.max(0, Math.min(1, currentScore + randomAdjustment));\n      return {\n        ...citation,\n        score: newScore\n      };\n    }).sort((a, b) => b.score - a.score); // Sort by score, highest first\n  };\n  const handleComplete = () => {\n    onTrainingComplete({\n      sortedCitations,\n      trainingHistory,\n      completedIterations: iteration\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Citation Review - Iteration \", iteration, \"/\", maxIterations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-50 text-green-700 px-3 py-1 rounded-full text-sm\",\n            children: [\"Relevant: \", selectedRelevant.length, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-red-50 text-red-700 px-3 py-1 rounded-full text-sm\",\n            children: [\"Irrelevant: \", selectedIrrelevant.length, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-4\",\n        children: \"Select 5 relevant and 5 irrelevant citations to train the model. This will help refine the results. The model will learn from your selections and improve the ranking.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), isTraining ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-10 w-10 border-b-2 border-blue-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-sm text-gray-600\",\n          children: \"Training model and re-ranking citations...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4 mb-6\",\n          children: [currentCitations.map(citation => /*#__PURE__*/_jsxDEV(CitationCard, {\n            citation: citation,\n            onSelect: handleCitationSelect,\n            isSelectedRelevant: selectedRelevant.some(c => c.id === citation.id),\n            isSelectedIrrelevant: selectedIrrelevant.some(c => c.id === citation.id)\n          }, citation.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)), currentCitations.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-6 text-gray-500\",\n            children: \"No citations available on this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePageChange(currentPage - 1),\n              disabled: currentPage === 1,\n              className: \"px-3 py-1 rounded border text-sm disabled:text-gray-400\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"px-3 py-1 text-sm\",\n              children: [\"Page \", currentPage, \" of \", Math.ceil(sortedCitations.length / citationsPerPage)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handlePageChange(currentPage + 1),\n              disabled: indexOfLastCitation >= sortedCitations.length,\n              className: \"px-3 py-1 rounded border text-sm disabled:text-gray-400\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTraining,\n              disabled: !isEnoughSelected,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded disabled:bg-blue-300\",\n              children: iteration < maxIterations ? 'Train Model & Continue' : 'Final Training'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), iteration > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleComplete,\n              className: \"px-4 py-2 bg-green-600 text-white rounded\",\n              children: \"Complete & Download Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), iteration > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-medium mb-2\",\n        children: \"Training Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-4 bg-gray-200 rounded-full overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full bg-blue-600 rounded-full\",\n          style: {\n            width: `${iteration / maxIterations * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-2\",\n        children: iteration < maxIterations ? `${iteration} of ${maxIterations} iterations completed` : 'Training complete!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewInterface, \"6aGRcNl6AvIQjD378JX1nGEd520=\");\n_c = ReviewInterface;\nexport default ReviewInterface;\nvar _c;\n$RefreshReg$(_c, \"ReviewInterface\");","map":{"version":3,"names":["React","useState","useEffect","CitationCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ReviewInterface","citations","keywords","onTrainingComplete","onDownloadResults","_s","selectedRelevant","setSelectedRelevant","selectedIrrelevant","setSelectedIrrelevant","currentPage","setCurrentPage","isTraining","setIsTraining","iteration","setIteration","sortedCitations","setSortedCitations","trainingHistory","setTrainingHistory","citationsPerPage","maxIterations","map","citation","index","id","score","isEnoughSelected","length","indexOfLastCitation","indexOfFirstCitation","currentCitations","slice","handleCitationSelect","isRelevant","some","c","filter","handlePageChange","pageNumber","handleTraining","newTrainingHistory","relevant","irrelevant","setTimeout","newSortedCitations","simulateModelTraining","prev","allCitations","currentScore","randomAdjustment","Math","random","newScore","max","min","sort","a","b","handleComplete","completedIterations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","isSelectedRelevant","isSelectedIrrelevant","onClick","disabled","ceil","style","width","_c","$RefreshReg$"],"sources":["/Users/sheme/Desktop/literature-review-tool/src/components/review/ReviewInterface.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CitationCard from './CitationCard';\n\nconst ReviewInterface = ({ citations, keywords, onTrainingComplete, onDownloadResults }) => {\n  const [selectedRelevant, setSelectedRelevant] = useState([]);\n  const [selectedIrrelevant, setSelectedIrrelevant] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isTraining, setIsTraining] = useState(false);\n  const [iteration, setIteration] = useState(1);\n  const [sortedCitations, setSortedCitations] = useState([]);\n  const [trainingHistory, setTrainingHistory] = useState([]);\n  \n  const citationsPerPage = 5;\n  const maxIterations = 10;\n  \n  useEffect(() => {\n    // Initialize with unsorted citations\n    setSortedCitations([...citations].map((citation, index) => ({\n      ...citation,\n      id: citation.id || index,\n      score: 0.5 // Initial neutral score\n    })));\n  }, [citations]);\n  \n  // Calculate if we have enough selected citations\n  const isEnoughSelected = selectedRelevant.length >= 5 && selectedIrrelevant.length >= 5;\n  \n  // Get current page citations\n  const indexOfLastCitation = currentPage * citationsPerPage;\n  const indexOfFirstCitation = indexOfLastCitation - citationsPerPage;\n  const currentCitations = sortedCitations.slice(indexOfFirstCitation, indexOfLastCitation);\n  \n  const handleCitationSelect = (citation, isRelevant) => {\n    if (isRelevant) {\n      if (selectedRelevant.some(c => c.id === citation.id)) {\n        setSelectedRelevant(selectedRelevant.filter(c => c.id !== citation.id));\n      } else if (selectedRelevant.length < 5) {\n        setSelectedRelevant([...selectedRelevant, citation]);\n      }\n    } else {\n      if (selectedIrrelevant.some(c => c.id === citation.id)) {\n        setSelectedIrrelevant(selectedIrrelevant.filter(c => c.id !== citation.id));\n      } else if (selectedIrrelevant.length < 5) {\n        setSelectedIrrelevant([...selectedIrrelevant, citation]);\n      }\n    }\n  };\n  \n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  \n  const handleTraining = () => {\n    if (!isEnoughSelected) return;\n    \n    setIsTraining(true);\n    \n    // Add current selections to training history\n    const newTrainingHistory = [\n      ...trainingHistory,\n      {\n        iteration,\n        relevant: selectedRelevant,\n        irrelevant: selectedIrrelevant\n      }\n    ];\n    setTrainingHistory(newTrainingHistory);\n    \n    // Simulate ML model training and re-scoring\n    setTimeout(() => {\n      // In a real app, this would call your backend ML service\n      // For now, we'll simulate re-scoring based on selections\n      const newSortedCitations = simulateModelTraining(sortedCitations, selectedRelevant, selectedIrrelevant);\n      \n      setSortedCitations(newSortedCitations);\n      \n      if (iteration < maxIterations) {\n        setIteration(prev => prev + 1);\n        // Reset selections for next iteration\n        setSelectedRelevant([]);\n        setSelectedIrrelevant([]);\n        setCurrentPage(1);\n      }\n      \n      setIsTraining(false);\n    }, 2000);\n  };\n  \n  // Simulate ML model training and re-scoring of citations\n  const simulateModelTraining = (allCitations, relevant, irrelevant) => {\n    // In a real implementation, this would be replaced with actual ML model predictions\n    return allCitations.map(citation => {\n      // Check if this citation was selected as relevant\n      if (relevant.some(c => c.id === citation.id)) {\n        return { ...citation, score: 1.0 }; // Highest relevance\n      }\n      \n      // Check if this citation was selected as irrelevant\n      if (irrelevant.some(c => c.id === citation.id)) {\n        return { ...citation, score: 0.0 }; // Lowest relevance\n      }\n      \n      // For other citations, adjust scores based on similarity to selected ones\n      // This is just a simple simulation\n      const currentScore = citation.score || 0.5;\n      const randomAdjustment = (Math.random() * 0.2) - 0.1; // Random adjustment between -0.1 and 0.1\n      const newScore = Math.max(0, Math.min(1, currentScore + randomAdjustment));\n      \n      return { ...citation, score: newScore };\n    }).sort((a, b) => b.score - a.score); // Sort by score, highest first\n  };\n  \n  const handleComplete = () => {\n    onTrainingComplete({\n      sortedCitations,\n      trainingHistory,\n      completedIterations: iteration\n    });\n  };\n  \n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg font-semibold\">Citation Review - Iteration {iteration}/{maxIterations}</h2>\n          <div className=\"flex space-x-4\">\n            <div className=\"bg-green-50 text-green-700 px-3 py-1 rounded-full text-sm\">\n              Relevant: {selectedRelevant.length}/5\n            </div>\n            <div className=\"bg-red-50 text-red-700 px-3 py-1 rounded-full text-sm\">\n              Irrelevant: {selectedIrrelevant.length}/5\n            </div>\n          </div>\n        </div>\n        \n        <p className=\"text-sm text-gray-600 mb-4\">\n          Select 5 relevant and 5 irrelevant citations to train the model. This will help refine the results.\n          The model will learn from your selections and improve the ranking.\n        </p>\n        \n        {isTraining ? (\n          <div className=\"text-center py-8\">\n            <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"mt-4 text-sm text-gray-600\">Training model and re-ranking citations...</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"space-y-4 mb-6\">\n              {currentCitations.map(citation => (\n                <CitationCard\n                  key={citation.id}\n                  citation={citation}\n                  onSelect={handleCitationSelect}\n                  isSelectedRelevant={selectedRelevant.some(c => c.id === citation.id)}\n                  isSelectedIrrelevant={selectedIrrelevant.some(c => c.id === citation.id)}\n                />\n              ))}\n              \n              {currentCitations.length === 0 && (\n                <div className=\"text-center py-6 text-gray-500\">\n                  No citations available on this page.\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => handlePageChange(currentPage - 1)}\n                  disabled={currentPage === 1}\n                  className=\"px-3 py-1 rounded border text-sm disabled:text-gray-400\"\n                >\n                  Previous\n                </button>\n                <span className=\"px-3 py-1 text-sm\">\n                  Page {currentPage} of {Math.ceil(sortedCitations.length / citationsPerPage)}\n                </span>\n                <button\n                  onClick={() => handlePageChange(currentPage + 1)}\n                  disabled={indexOfLastCitation >= sortedCitations.length}\n                  className=\"px-3 py-1 rounded border text-sm disabled:text-gray-400\"\n                >\n                  Next\n                </button>\n              </div>\n              \n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={handleTraining}\n                  disabled={!isEnoughSelected}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded disabled:bg-blue-300\"\n                >\n                  {iteration < maxIterations ? 'Train Model & Continue' : 'Final Training'}\n                </button>\n                \n                {iteration > 1 && (\n                  <button\n                    onClick={handleComplete}\n                    className=\"px-4 py-2 bg-green-600 text-white rounded\"\n                  >\n                    Complete & Download Results\n                  </button>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      \n      {iteration > 1 && (\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h3 className=\"font-medium mb-2\">Training Progress</h3>\n          <div className=\"h-4 bg-gray-200 rounded-full overflow-hidden\">\n            <div \n              className=\"h-full bg-blue-600 rounded-full\"\n              style={{ width: `${(iteration / maxIterations) * 100}%` }}\n            ></div>\n          </div>\n          <p className=\"text-sm text-gray-600 mt-2\">\n            {iteration < maxIterations \n              ? `${iteration} of ${maxIterations} iterations completed` \n              : 'Training complete!'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ReviewInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}